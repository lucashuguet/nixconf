diff --git a/kitty/cell_defines.glsl b/kitty/cell_defines.glsl
index 0bc4f4a34..d4681b8c7 100644
--- a/kitty/cell_defines.glsl
+++ b/kitty/cell_defines.glsl
@@ -9,6 +9,7 @@
 #define FG_OVERRIDE_THRESHOLD {FG_OVERRIDE_THRESHOLD}
 #define TEXT_NEW_GAMMA {TEXT_NEW_GAMMA}
 
+#define BOLD_SHIFT {BOLD_SHIFT}
 #define DECORATION_SHIFT {DECORATION_SHIFT}
 #define REVERSE_SHIFT {REVERSE_SHIFT}
 #define STRIKE_SHIFT {STRIKE_SHIFT}
diff --git a/kitty/cell_vertex.glsl b/kitty/cell_vertex.glsl
index 71086e255..870223741 100644
--- a/kitty/cell_vertex.glsl
+++ b/kitty/cell_vertex.glsl
@@ -7,6 +7,7 @@ layout(std140) uniform CellRenderData {
     float xstart, ystart, dx, dy, sprite_dx, sprite_dy, background_opacity, use_cell_bg_for_selection_fg, use_cell_fg_for_selection_fg, use_cell_for_selection_bg;
 
     uint default_fg, default_bg, highlight_fg, highlight_bg, cursor_fg, cursor_bg, url_color, url_style, inverted;
+    uint bold_is_bright;
 
     uint xnum, ynum, cursor_fg_sprite_idx;
     float cursor_x, cursor_y, cursor_w;
@@ -71,6 +72,22 @@ vec3 color_to_vec(uint c) {
     return vec3(gamma_lut[r], gamma_lut[g], gamma_lut[b]);
 }
 
+uint byte_to_bool(uint n) {
+	uint n1 = (n >> 1) | n;
+	uint n2 = (n1 >> 2) | n1;
+	uint n3 = (n2 >> 4) | n2;
+	return n3 & 1u;
+}
+
+uint brighten_color(uint c, uint is_bold) {
+	uint table_idx = (c >> 8) & 0xFFu;
+	uint is_table_color = c & 1u;
+	uint is_rgb_color = byte_to_bool(c & 0xFEu);
+	uint is_8bit_color = byte_to_bool(table_idx & 0xF8u);
+	uint should_brighten = bold_is_bright * is_bold * (1u - is_rgb_color * is_8bit_color) * is_table_color;
+	return c | (0x800u * should_brighten);
+}
+
 uint resolve_color(uint c, uint defval) {
     // Convert a cell color to an actual color based on the color table
     int t = int(c & BYTE_MASK);
@@ -152,16 +169,18 @@ void main() {
     // set cell color indices {{{
     uvec2 default_colors = uvec2(default_fg, default_bg);
     uint text_attrs = sprite_coords[3];
+    uint is_bold = ((text_attrs >> BOLD_SHIFT) & ONE);
     uint is_reversed = ((text_attrs >> REVERSE_SHIFT) & ONE);
     uint is_inverted = is_reversed + inverted;
     int fg_index = fg_index_map[is_inverted];
     int bg_index = 1 - fg_index;
     int mark = int(text_attrs >> MARK_SHIFT) & MARK_MASK;
     uint has_mark = uint(step(1, float(mark)));
-    uint bg_as_uint = resolve_color(colors[bg_index], default_colors[bg_index]);
+    uint bg_as_uint = resolve_color(brighten_color(colors[bg_index], is_bold), default_colors[bg_index]);
     bg_as_uint = has_mark * color_table[NUM_COLORS + mark] + (ONE - has_mark) * bg_as_uint;
     vec3 bg = color_to_vec(bg_as_uint);
-    uint fg_as_uint = resolve_color(colors[fg_index], default_colors[fg_index]);
+
+    uint fg_as_uint = resolve_color(brighten_color(colors[fg_index], is_bold), default_colors[fg_index]);
     // }}}
 
     // Foreground {{{
diff --git a/kitty/fast_data_types.pyi b/kitty/fast_data_types.pyi
index 8e2244176..317a76691 100644
--- a/kitty/fast_data_types.pyi
+++ b/kitty/fast_data_types.pyi
@@ -263,6 +263,7 @@ CELL_BG_PROGRAM: int
 CELL_FG_PROGRAM: int
 CELL_PROGRAM: int
 CELL_SPECIAL_PROGRAM: int
+BOLD: int;
 DECORATION: int
 DIM: int
 GRAPHICS_ALPHA_MASK_PROGRAM: int
diff --git a/kitty/options/definition.py b/kitty/options/definition.py
index f93f31f77..864a88e51 100644
--- a/kitty/options/definition.py
+++ b/kitty/options/definition.py
@@ -56,6 +56,13 @@
 
 opt('bold_italic_font', 'auto')
 
+opt('bold_is_bright', 'no',
+    option_type='to_bool', ctype='bool',
+    long_text='''
+Display bold text with bright colors
+'''
+    )
+
 opt('font_size', '11.0',
     option_type='to_font_size', ctype='double',
     long_text='Font size (in pts).'
diff --git a/kitty/options/parse.py b/kitty/options/parse.py
index b08b460fc..6f6792c22 100644
--- a/kitty/options/parse.py
+++ b/kitty/options/parse.py
@@ -103,6 +103,9 @@ def bell_path(self, val: str, ans: typing.Dict[str, typing.Any]) -> None:
     def bold_font(self, val: str, ans: typing.Dict[str, typing.Any]) -> None:
         ans['bold_font'] = str(val)
 
+    def bold_is_bright(self, val: str, ans: typing.Dict[str, typing.Any]) -> None:
+        ans['bold_is_bright'] = to_bool(val)
+
     def bold_italic_font(self, val: str, ans: typing.Dict[str, typing.Any]) -> None:
         ans['bold_italic_font'] = str(val)
 
diff --git a/kitty/options/to-c-generated.h b/kitty/options/to-c-generated.h
index eba012444..6b6a12ebf 100644
--- a/kitty/options/to-c-generated.h
+++ b/kitty/options/to-c-generated.h
@@ -941,6 +941,19 @@ convert_from_opts_mark3_background(PyObject *py_opts, Options *opts) {
     Py_DECREF(ret);
 }
 
+static void
+convert_from_python_bold_is_bright(PyObject *val, Options *opts) {
+    opts->bold_is_bright = PyObject_IsTrue(val);
+}
+
+static void
+convert_from_opts_bold_is_bright(PyObject *py_opts, Options *opts) {
+    PyObject *ret = PyObject_GetAttrString(py_opts, "bold_is_bright");
+    if (ret == NULL) return;
+    convert_from_python_bold_is_bright(ret, opts);
+    Py_DECREF(ret);
+}
+
 static void
 convert_from_python_close_on_child_death(PyObject *val, Options *opts) {
     opts->close_on_child_death = PyObject_IsTrue(val);
@@ -1282,6 +1295,8 @@ convert_opts_from_python_opts(PyObject *py_opts, Options *opts) {
     if (PyErr_Occurred()) return false;
     convert_from_opts_mark3_background(py_opts, opts);
     if (PyErr_Occurred()) return false;
+    convert_from_opts_bold_is_bright(py_opts, opts);
+    if (PyErr_Occurred()) return false;
     convert_from_opts_close_on_child_death(py_opts, opts);
     if (PyErr_Occurred()) return false;
     convert_from_opts_allow_hyperlinks(py_opts, opts);
diff --git a/kitty/options/types.py b/kitty/options/types.py
index dac33a8d6..e9b1538f5 100644
--- a/kitty/options/types.py
+++ b/kitty/options/types.py
@@ -58,6 +58,7 @@
  'bell_on_tab',
  'bell_path',
  'bold_font',
+ 'bold_is_bright',
  'bold_italic_font',
  'box_drawing_scale',
  'clear_all_mouse_actions',
@@ -486,6 +487,7 @@ class Options:
     bell_on_tab: str = 'ðŸ”” '
     bell_path: typing.Optional[str] = None
     bold_font: str = 'auto'
+    bold_is_bright: bool = False
     bold_italic_font: str = 'auto'
     box_drawing_scale: typing.Tuple[float, float, float, float] = (0.001, 1.0, 1.5, 2.0)
     clear_all_mouse_actions: bool = False
diff --git a/kitty/shaders.c b/kitty/shaders.c
index bcda16822..89a1fd615 100644
--- a/kitty/shaders.c
+++ b/kitty/shaders.c
@@ -295,6 +295,7 @@ cell_update_uniform_block(ssize_t vao_idx, Screen *screen, int uniform_buffer, c
         GLfloat xstart, ystart, dx, dy, sprite_dx, sprite_dy, background_opacity, use_cell_bg_for_selection_fg, use_cell_fg_for_selection_color, use_cell_for_selection_bg;
 
         GLuint default_fg, default_bg, highlight_fg, highlight_bg, cursor_fg, cursor_bg, url_color, url_style, inverted;
+        GLuint bold_is_bright;
 
         GLuint xnum, ynum, cursor_fg_sprite_idx;
         GLfloat cursor_x, cursor_y, cursor_w;
@@ -372,6 +373,7 @@ cell_update_uniform_block(ssize_t vao_idx, Screen *screen, int uniform_buffer, c
     rd->sprite_dx = 1.0f / (float)x; rd->sprite_dy = 1.0f / (float)y;
     rd->inverted = screen_invert_colors(screen) ? 1 : 0;
     rd->background_opacity = os_window->is_semi_transparent ? os_window->background_opacity : 1.0f;
+    rd->bold_is_bright = OPT(bold_is_bright) ? 1 : 0;
 
 #undef COLOR
     rd->url_color = OPT(url_color); rd->url_style = OPT(url_style);
diff --git a/kitty/shaders.py b/kitty/shaders.py
index a99617262..31021e240 100644
--- a/kitty/shaders.py
+++ b/kitty/shaders.py
@@ -13,6 +13,7 @@
     CELL_FG_PROGRAM,
     CELL_PROGRAM,
     CELL_SPECIAL_PROGRAM,
+    BOLD,
     DECORATION,
     DECORATION_MASK,
     DIM,
@@ -156,6 +157,7 @@ def __call__(self, semi_transparent: bool = False, allow_recompile: bool = False
                 STRIKE_SHIFT=STRIKETHROUGH,
                 DIM_SHIFT=DIM,
                 DECORATION_SHIFT=DECORATION,
+                BOLD_SHIFT=BOLD,
                 MARK_SHIFT=MARK,
                 MARK_MASK=MARK_MASK,
                 DECORATION_MASK=DECORATION_MASK,
diff --git a/kitty/state.h b/kitty/state.h
index a1d1c2b84..d29ecfb57 100644
--- a/kitty/state.h
+++ b/kitty/state.h
@@ -74,6 +74,7 @@ typedef struct {
     bool force_ltr;
     bool resize_in_steps;
     bool sync_to_monitor;
+    bool bold_is_bright;
     bool close_on_child_death;
     bool window_alert_on_bell;
     bool debug_keyboard;
